<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Custom Search Highlighter</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>

<script src="https://cdn.jsdelivr.net/npm/mark.js/dist/mark.min.js"></script>
<script src="script.js"></script>
</body>
</html>

#customSearchContainer {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: white;
    padding: 10px;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
    z-index: 1000;
}

#customSearchBox {
    margin-right: 5px;
}

class CustomSearchHighlighter {
    constructor() {
        if (CustomSearchHighlighter.instance) {
            return CustomSearchHighlighter.instance;
        }
        CustomSearchHighlighter.instance = this;

        this.searchDiv = null;
        this.markInstance = new Mark(document.querySelector("body"));
        this.createSearchUI();
    }

    createSearchUI() {
        if (document.getElementById("customSearchContainer")) return;

        this.searchDiv = document.createElement("div");
        this.searchDiv.id = "customSearchContainer";
        document.body.prepend(this.searchDiv);

        var searchBox = document.createElement("input");
        searchBox.id = "customSearchBox";
        this.searchDiv.appendChild(searchBox);

        var searchButton = document.createElement("button");
        searchButton.textContent = "搜索";
        this.searchDiv.appendChild(searchButton);

        var closeButton = document.createElement("button");
        closeButton.textContent = "关闭";
        this.searchDiv.appendChild(closeButton);

        searchButton.addEventListener("click", () => this.highlightText(searchBox.value));
        closeButton.addEventListener("click", () => this.closeSearchUI());
    }

    highlightText(searchText) {
        this.markInstance.unmark({
            done: () => {
                this.markInstance.mark(searchText);
            }
        });
    }

    closeSearchUI() {
        this.searchDiv.remove();
        this.searchDiv = null; // Allow garbage collection
    }
}

document.addEventListener('DOMContentLoaded', (event) => {
    new CustomSearchHighlighter();
});